<security-notice xmlns="http://security.libvirt.org/xmlns/security-notice/1.0">
  <id>2008-0001</id>

  <summary>Missing checks for read only connections on many APIs</summary>

  <description>
<![CDATA[The APIs virDomainMigrate, virDomainBlockPeek, virDomainMemoryPeek,
 virDomainSetAutostart, virNetworkSetAutostart, virConnectFindStoragePoolSources
and virStoragePoolSetAutostart did not check the read-only flag of the
connection. This allowed unprivileged users to invoke APIs that they should
not have access to.]]>
  </description>

  <impact>
<![CDATA[The default libvirt configuration allows all local user
accounts read-only access to the libvirtd daemon. Any local user
can migrate a running virtual machine to a host of their choice.
Any local user can change whether virtual machines, networks
or storage pools started automatically on boot. Any local user
can trigger discovery of storage pools. Any local user can peek
into the disk image or memory of running guests.]]>
  </impact>

  <workaround>
<![CDATA[Edit the /etc/libvirt/libvirtd.conf configuration file,
to set the 'unix_sock_ro_perms = "0700"' to prevent local users
from connecting to libvirt. Alternatively setup a policy kit
rule to prevent them access without first authenticating as root.]]>
  </workaround>

  <credits>
    <reporter>
      <name>Daniel P. Berrange</name>
      <email>berrange@redhat.com</email>
    </reporter>
    <patcher>
      <name>Daniel P. Berrange</name>
      <email>berrange@redhat.com</email>
    </patcher>
  </credits>

  <lifecycle>
    <reported>20081212</reported>
    <published>20081217</published>
    <fixed>20081217</fixed>
  </lifecycle>

  <reference>
    <advisory type="CVE" id="2008-5086"/>
  </reference>

  <product name="libvirt">
    <repository>libvirt.git</repository>
    <branch>
      <name>master</name>
      <tag state="vulnerable">v0.2.1</tag>
      <tag state="vulnerable">v0.2.2</tag>
      <tag state="vulnerable">v0.2.3</tag>
      <tag state="vulnerable">v0.3.0</tag>
      <tag state="vulnerable">v0.3.1</tag>
      <tag state="vulnerable">v0.3.2</tag>
      <tag state="vulnerable">v0.3.3</tag>
      <tag state="vulnerable">v0.4.1</tag>
      <tag state="vulnerable">v0.4.2</tag>
      <tag state="vulnerable">v0.4.4</tag>
      <tag state="vulnerable">v0.4.6</tag>
      <tag state="vulnerable">v0.5.0</tag>
      <tag state="vulnerable">v0.5.1</tag>
      <change state="vulnerable">57a18198814f80b1397e1a14d33746034b9dbd5c</change>
      <change state="vulnerable">81005437f4e860d6d65243473c593e4335193b13</change>
      <change state="vulnerable">cb228a0e24266f43dbab208bd38965e511f714ee</change>
      <change state="vulnerable">8354895e681e8aee9bfa0290cb98123858165b91</change>
      <change state="vulnerable">6bcf25017bc66ef866768c7a827dfe03c96638f0</change>
      <change state="vulnerable">39c9354c5ce87e1205f41af4737f970aa4f6e5dd</change>
      <tag state="fixed">v0.6.0</tag>
      <change state="fixed">53611889ff93c442028828c70472151a7cf1bf4d</change>
    </branch>
  </product>

</security-notice>
